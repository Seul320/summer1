배열 A의 크기 N과 교환 횟수 K를 입력 받음
N개의 서로 다른 양의 정수로 이루어진 배열 A의 원소들을 입력 받음
QuickSort 알고리즘을 이용하여 배열 A를 오름차순으로 정렬하면서 교환 횟수를 카운트
교환 횟수가 K번이 되면 그 시점의 배열 A를 출력하고 종료
교환 횟수가 K보다 작을 경우에는 -1을 출력

위 슈도코드는 QuickSort 알고리즘을 구현하여 배열 A를 정렬하면서 교환 횟수를 카운트하고,
교환 횟수가 K번이 되면 그 시점의 배열 A를 출력하거나 K보다 작을 경우 -1을 출력하는 로직이 적절하게 작성되어 있다.

#include <stdio.h>

void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

int partition(int A[], int p, int r, int *k) {
    int x = A[r];
    int i = p - 1;
    for (int j = p; j < r; j++) {
        if (A[j] <= x) {
            i++;
            swap(&A[i], &A[j]);
            (*k)++;
        }
    }
    swap(&A[i + 1], &A[r]);
    (*k)++;
    return i + 1;
}

void quick_sort(int A[], int p, int r, int K) {
    if (p < r) {
        int k = 0;
        int q = partition(A, p, r, &k);
        if (k >= K) return;
        quick_sort(A, p, q - 1, K);
        quick_sort(A, q + 1, r, K);
    }
}

int main() {
    int N, K;
    scanf("%d %d", &N, &K);

    int A[N];
    for (int i = 0; i < N; i++) {
        scanf("%d", &A[i]);
    }

    quick_sort(A, 0, N - 1, K);

    if (K <= N - 1) {
        for (int i = 0; i < N; i++) {
            printf("%d ", A[i]);
        }
    } else {
        printf("-1");
    }

    return 0;
}
